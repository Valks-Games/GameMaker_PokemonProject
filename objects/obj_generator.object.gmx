<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x + 32, y + 32, obj_player)

var box_width = 32
var box_height = 32
var width = 5 + irandom(5)
var height = 5 + irandom(5)
var horz_rooms = 5 + irandom(5)
var vert_rooms = 5 + irandom(5)
var width_room = width * box_width
var height_room = height * box_height

room_width = width_room * horz_rooms
room_height = height_room * vert_rooms

for (var fary = 0; fary &lt; vert_rooms; fary++){
  for (var farx = 0; farx &lt; horz_rooms; farx++){
    for (var yy = 0; yy &lt; height; yy++){
      for (var xx = 0; xx &lt; width; xx++){
        var horz_shift = farx * width_room
        var vert_shift = fary * height_room
        if (yy &gt; 0 &amp;&amp; yy &lt; height - 1){
          if (yy % 2 == 0){
            if (yy != round((height / 2) - 1) &amp;&amp; yy != round(height / 2)){
              instance_create(x + horz_shift, y + (yy * box_height) + vert_shift, obj_wall)
              instance_create(x + ((width - 1) * box_width) + horz_shift, y + (yy * box_height) + vert_shift, obj_wall)
            }
          } else {
            if (yy != round(height / 2)){
              instance_create(x + horz_shift, y + (yy * box_height) + vert_shift, obj_wall)
              instance_create(x + ((width - 1) * box_width) + horz_shift, y + (yy * box_height) + vert_shift, obj_wall)
            }
          }
          break;
        }
        if (xx != round((width / 2) - 1) &amp;&amp; xx != round(width / 2)){
           instance_create(x + (xx * box_width) + horz_shift, y + (yy * box_height) + vert_shift, obj_wall)
        }
      }
    }
  }
}

for (var fary = 0; fary &lt; vert_rooms; fary++){
  for (var farx = 0; farx &lt; horz_rooms; farx++){
    for (var yy = 0; yy &lt; height; yy++){
      for (var xx = 0; xx &lt; width; xx++){
        var horz_shift = farx * width_room
        var vert_shift = fary * height_room
        tile_add(bck_sand, 32 * irandom(1), 32 * irandom(1), 32, 32, (x + 16 - 32) + (xx * box_width) + horz_shift, (y + 16 - 32) + (yy * box_height) + vert_shift, 10000);
      }
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
