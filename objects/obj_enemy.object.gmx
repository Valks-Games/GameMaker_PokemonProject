<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>horz_speed = 4;
vert_speed = 4;

left = 0
right = 0
up = 0
down = 0

picker = irandom(3)

switch(picker){
  case 0: left = 1; break;
  case 1: right = 1; break;
  case 2: up = 1; break;
  case 3: down = 1; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (left) x++;
if (right) y++;
if (up) y--;
if (down) x--;

if (1 == 1) return 1;

var wall_left = place_meeting(x - horz_speed, y, obj_wall)
var wall_right = place_meeting(x + horz_speed, y, obj_wall)
var wall_up = place_meeting(x, y - vert_speed, obj_wall)
var wall_down = place_meeting(x, y + vert_speed, obj_wall)

var wall_left_pixel = place_meeting(x - sign(horz_speed), y, obj_wall)
var wall_right_pixel = place_meeting(x + sign(horz_speed), y, obj_wall)
var wall_up_pixel = place_meeting(x, y - sign(vert_speed), obj_wall)
var wall_down_pixel = place_meeting(x, y + sign(vert_speed), obj_wall)

if (left){
  if (!wall_left){
    x -= horz_speed
  } else {
    while(!wall_left_pixel){
      x -= sign(horz_speed)
    }
  }
}

if (right){
  if (!wall_right){
    x += horz_speed
  } else {
    while(!wall_right_pixel){
      x += sign(horz_speed)
    }
  }
}

if (up){
  if (!wall_up){
    y -= vert_speed
  } else {
    while(!wall_up_pixel){
      y -= sign(vert_speed)
    }
  }
}

if (down){
  if (!wall_down){
    y += vert_speed
  } else {
    while(!wall_down_pixel){
      y += sign(vert_speed)
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
